@using X.PagedList
@using X.PagedList.Mvc.Core
@model dynamic
@{
    var companyCd = User.Claims.FirstOrDefault(m => m.Type == "CompanyCd")?.Value;
    var data = (StaticPagedList<Employee_GetRow_Result>)Model.Data;
    var filterModel = (EmployeeFilterModel)Model.FilterModel;
    int[] entries = { 25, 50, 100, 200, 500 };
    var dateFormat = ExtensionMethod.GetDateFormat();
}
<div class="row" id="EmployeeGrid">
    @foreach (var item in data)
    {
        var avatarFileExist = item.ImageFilePath.FileExist("emp-photo", companyCd);
        var avatarImage = avatarFileExist == true && !string.IsNullOrEmpty(item.ImageFilePath) ? $"/uploads/{companyCd}/emp-photo/{item.ImageFilePath}" : "/images/avatar.png";
        var lvStatus = item.LvStatus == "N" ? "Leave Applied" :
        item.LvStatus == "Y" ? "Leave Approved" :
        item.LvStatus == "F" ? "On Leave " : "Present";
        var statusClass = item.LvStatus == "N" ? "warning" : item.LvStatus == "Y" ? "orange" : item.LvStatus == "F" ? "danger" : "success";
        <div class="col-12 col-sm-6 col-md-4 d-flex align-items-stretch flex-column">
            <div class="card bg-light d-flex flex-fill border border-info">
                <div class="card-header text-muted border-bottom-0">
                    <div class="d-flex">
                        <h6 class="mb-0 font-weight-light"><b>@item.Salutation @item.Name</b></h6>
                        <span class="badge badge-@statusClass lv-status">@lvStatus</span>
                    </div>
                </div>
                <div class="card-body pt-0 pb-0">
                    <div class="row">
                        <div class="col-7">
                            <p class="text-muted text-sm mb-0"><b>Code: </b> @item.Cd</p>
                            <p class="text-muted text-sm mb-0"><b>Branch: </b> @item.Branch</p>
                            <p class="text-muted text-sm mb-0"><b>Sponsor: </b> @item.Sponsor</p>
                            <p class="text-muted text-sm mb-0"><b>Designation: </b> @item.Designation</p>
                            <p class="text-muted text-sm mb-0"><b>Department: </b> @item.Department</p>
                            <p class="text-muted text-sm mb-0"><b>Type: </b> @item.EmpType</p>
                            <p class="text-muted text-sm mb-0"><b>Nationality: </b> @item.Nationality</p>
                            <p class="text-muted text-sm mb-0"><b>Date of Join: </b> @item.DOJ.ToString(dateFormat)</p>
                        </div>
                        <div class="col-5 text-center">
                            <img src="@avatarImage" alt="user-avatar" class="rounded img-fluid border" style="height: 150px;">
                        </div>
                    </div>
                </div>
                <div class="card-footer">
                    <div class="text-right">
                        <a asp-action="Profile" asp-route-processId="HRPE1" asp-route-cd="@item.Cd.Trim()" class="btn btn-sm btn-primary btn-view-profile">
                            <i class="fas fa-user"></i> View Profile
                        </a>
                    </div>
                </div>
            </div>
        </div>
    }
</div>
@if (data.Count == 0)
{
    <span>@CommonMessage.EMPTYGRID</span>
}
<div class="d-flex align-items-center">
    @{
        var startRange = (data.PageNumber - 1) * data.PageSize + 1;
        var endRange = startRange + (data.Count - 1);
        var totalItemCount = data.TotalItemCount;

        if (totalItemCount == 0)
        {
            startRange = 0;
            endRange = 0;
        }
        else if (data.Count == 1)
        {
            endRange = startRange;
        }
        else if (data.Count < data.PageSize)
        {
            endRange = startRange + (data.Count - 1);
        }
    }
    <div class="mr-auto">
        Showing @startRange to @endRange of @totalItemCount entries
    </div>
    <div class="d-flex align-items-center">
        <div>
            <select id="PageSize" name="pageSize" class="form-control form-control-sm" onchange="changeShowEntries(this)">
                @foreach (var item in entries)
                {
                    <option value="@item">@item</option>
                }
            </select>
        </div>
        <div class="ml-2 mr-5">entries per page</div>
    </div>
    <div>
        @Html.PagedListPager(data, page => Url.Action("FetchEmployees", new
            {
                page,
                pageSize = data.PageSize,
                Departments = filterModel.Departments,
                Designations = filterModel.Designations,
                Branches = filterModel.Branches,
                Sponsors = filterModel.Sponsors,
                EmployeeTypes = filterModel.EmployeeTypes,
                LeaveStatus = filterModel.LeaveStatus,
                EmployeeStatus = filterModel.EmployeeStatus
            }), new PagedListRenderOptions
   {
       DisplayLinkToFirstPage = PagedListDisplayMode.Never,
       DisplayLinkToLastPage = PagedListDisplayMode.Never,
       DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
       DisplayLinkToNextPage = PagedListDisplayMode.Always,
       DisplayLinkToIndividualPages = true,
       MaximumPageNumbersToDisplay = 5,
       LinkToPreviousPageFormat = "Previous",
       LinkToNextPageFormat = "Next",
       LiElementClasses = new string[] { "page-item" },
       PageClasses = new string[] { "page-link" }
   })
    </div>
</div>
<script>
    var hasViewPermission = $("#HasViewPermission").val();
    if (!hasViewPermission)
        $(".btn-view-profile").remove();
    $("#PageSize").val('@data.PageSize');
</script>