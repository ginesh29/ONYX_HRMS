@{
    ViewData["Title"] = SharedResource["Token Call"];
    var tokenSetting = _authService.GetTokenSetting();
}
<div class="card maximized-card">
    <div class="card-header">
        <h3 class="card-title"></h3>
        <div class="card-tools">
            <button type="button" class="btn btn-tool d-none" data-card-widget="card-refresh" data-source="/Queue/TokenCallPartial"><i class="fas fa-refresh" id="btn-refresh"></i></button>
            <button type="button" class="btn btn-tool" data-card-widget="maximize"><i class="fas fa-compress"></i></button>
        </div>
    </div>
    <div class="card-body"></div>
</div>
<div id="TokenSettingModal" class="modal fade" role="dialog" tabindex='-1'></div>
@section scripts {
    <script src="~/lib/microsoft/signalr/dist/browser/signalr.min.js"></script>
    <script>
        const connection = new signalR.HubConnectionBuilder().withUrl("/chatHub").build();
        connection.on("ReceiveTokenAddCall", function () {
            showSuccessToastr("New Token Added");
            $("#btn-refresh").click();
        });
        connection.start();
        function bindVoices(selectedVoice) {
            $("#VoiceName").empty();
            const voices = window.speechSynthesis.getVoices();
            var html = '';
            $.each(voices, function (i, item) {
                html += `<option value='${item.name}'>${item.name} - ${item.lang}</option>`
            })
            $("#VoiceName").html(html);
            $("#VoiceName").attr("title", "-- Select --");
            $(".select-picker").not("#user-company-dropdown").attr("data-live-search", true);

            if (selectedVoice)
                setTimeout(function () {
                    $("#VoiceName").val(selectedVoice).change();
                }, 100)
        }
        window.speechSynthesis.onvoiceschanged = bindVoices();

        function showTokenSettingModal() {
            var url = `/Queue/TokenSetting`;
            $('#TokenSettingModal').load(url, function () {
                parseDynamicForm();
                var voice = $("#TokenVoice").text();
                bindVoices(voice);
                $("#TokenSettingModal").modal("show");
            });
        }

        function callNextToken(btn, tokenNo, recall) {
            if (tokenNo) {
                var counter = '@tokenSetting.CounterName';
                var message = `Token Number ${tokenNo} ${counter}`;
                var voiceName = $("#TokenVoice").text();
                connection.invoke("SendTokenCall", message, voiceName);
                loadingButton(btn);
                if (!recall)
                    postAjax("/Queue/CallNextToken", { tokenNo }, function (response) {
                        if (response.success)
                            showSuccessToastr(response.message);
                        else
                            showErrorToastr(response.message);
                        $("#btn-refresh").click();
                        connection.invoke("SendRefreshCall");
                    })
                // else
                //     connection.invoke("SendRefreshCall");
                unloadingButton(btn);
            }
            else
                showErrorToastr("No Ticket Available")
        }

        function serveToken(btn, status) {
            loadingButton(btn);
            postAjax(`/Queue/ServeToken`, { status }, function (response) {
                if (response.success)
                    showSuccessToastr(response.message);
                else
                    showErrorToastr(response.message);
                unloadingButton(btn);
                $("#btn-refresh").click();
                connection.invoke("SendRefreshCall");
            })
        }

        function saveTokenSetting(btn) {
            var frm = $("#token-setting-frm");
            if (frm.valid()) {
                loadingButton(btn);
                if (frm.valid()) {
                    loadingButton(btn);
                    var ServiceCd = $("#ServiceCd").val();
                    var ServiceName = $("#ServiceCd option:selected").text();
                    var CounterCd = $("#CounterCd").val();
                    var CounterName = $("#CounterCd option:selected").text();
                    var VoiceName = $("#VoiceName").val();
                    postAjax("/Queue/SaveTokenSetting", { ServiceCd, ServiceName, CounterCd, CounterName, VoiceName }, function (response) {
                        if (response.success) {
                            showSuccessToastr(response.message);
                            $("#TokenSettingModal").modal("hide");
                        }
                        else
                            showErrorToastr(response.message);
                        unloadingButton(btn);
                        $("#btn-refresh").click();
                        connection.invoke("SendRefreshCall");
                    });
                }
            }
        }
    </script>
}