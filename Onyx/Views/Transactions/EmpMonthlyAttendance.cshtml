@model AttendanceFilterModel
@{
    ViewData["Title"] = "Employee Monthly Attendance";
}
<div class="card">
    <div class="card-body">
        <form id="emp-monthly-attendance-filter-frm">
            <div class="row">
                <div class="col-md-3">
                    <div class="form-group">
                        <label asp-for="Branch"></label>
                        <select asp-for="Branch" class="form-control select-picker" asp-items="ViewBag.BranchItems">
                        </select>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        <label asp-for="Department"></label>
                        <select asp-for="Department" class="form-control filter-select-picker" asp-items="ViewBag.DepartmentItems">
                        </select>
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group">
                        <label asp-for="EmpCd"></label>
                        <input asp-for="EmpCd" class="form-control" />
                    </div>
                </div>
                <div class="col-md-1">
                    <div class="form-group">
                        <label asp-for="MonthYear"></label>
                        <input asp-for="MonthYear" value="@ViewBag.currentMonthYear" class="form-control month-year-input" type="text" data-toggle="datetimepicker">
                    </div>
                </div>
                <div class="col-md-1">
                    <div class="form-group">
                        <label asp-for="WorkingHrDay"></label>
                        <input asp-for="WorkingHrDay" value="@ViewBag.WorkingHrDay" class="form-control disabled" type="text">
                    </div>
                </div>
                <div class="col-md-2 d-flex align-items-center">
                    <div class="form-group mt-4">
                        <button type="button" class="btn btn-warning mt-2" onclick="searchAttendance(this)" id="btn-search"><i class="fa fa-search"></i></button>
                        <button type="button" class="btn btn-outline-info mt-2 ml-1 d-none" id="btn-excel"><i class="fa fa-file-excel"></i></button>
                        <button class="btn btn-secondary mt-2 ml-1 d-none" type="button" id="btn-clear" onclick="clearSearch(this)">Clear</button>
                    </div>
                </div>
            </div>
            <h5 class="mt-2 mb-4 side-separator-container"><span class="side-separator">OR</span></h5>
            <div class="row">
                <div class="col-md-3">
                    <div class="custom-file">
                        <input type="file" id="import-file" name="file" onchange="uploadFile()" class="custom-file-input">
                        <label class="custom-file-label" id="image-file-label" for="import-file">Choose file</label>
                    </div>
                    <a href="/formats/Emp_Attendance_Import_Sample.xlsx">Download Sample File</a>
                </div>
            </div>
        </form>
        <div id="excel-import-data"></div>
        <div id="EmpMonthlyAttendanceData"></div>
    </div>
</div>
@section scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.17.3/xlsx.full.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/FileSaver.js/2.0.5/FileSaver.min.js"></script>
    <script>
        function searchAttendance(btn) {
            var frm = $("#emp-monthly-attendance-filter-frm");
            if (frm.valid()) {
                loadingButton(btn);
                postAjax(`/Transactions/FetchEmpMonthlyAttendance`, frm.serialize(), function (response) {
                    $("#btn-excel").addClass("d-none");
                    $("#import-file").val("");
                    $("#EmpMonthlyAttendanceData").html(response);
                    $("#btn-clear").removeClass("d-none");
                    $("#btn-excel").addClass("d-none");
                    if (!$("#EmpMonthlyAttendanceData tfoot").length)
                        $("#btn-excel").removeClass("d-none");
                    unloadingButton(btn);
                });
            }
            else
                showErrorToastr("Please provide highlighted field");
        }
        function clearSearch(btn) {
            var frm = $("#emp-monthly-attendance-filter-frm");
            frm.find("input").val("");
            frm.find(".select-picker").selectpicker('val', '');
            frm.find(".filter-select-picker").selectpicker('val', '');
            $("#MonthYear").val('@ViewBag.currentMonthYear');
            $("#WorkingHrDay").val('@ViewBag.WorkingHrDay');
            $("#EmpMonthlyAttendanceData").empty();
            $("#excel-import-data").empty();
            $("#btn-excel").addClass("d-none");
        }
        function updateAttendance(btn) {
            var frm = $("#attendance-frm");
            if (frm.valid()) {
                loadingButton(btn);
                var url = `/Transactions/SaveEmpMonthlyAttendance`;
                postAjax(url, decodeURI(frm.serialize()), function (response) {
                    if (response.success) {
                        showSuccessToastr(response.message);
                        searchAttendance();
                    }
                    else {
                        showErrorToastr(response.message);
                    }
                    unloadingButton(btn);
                });
            }
        }
        function deleteAttendance(btn) {
            Swal.fire({
                title: "Are you sure?",
                text: "You want to Delete?",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: "Yes!"
            }).then((result) => {
                if (result.isConfirmed) {
                    loadingButton(btn);
                    deleteAjax(`/Transactions/DeleteEmpMonthlyAttendance?${$("#emp-monthly-attendance-filter-frm").serialize()}`, function (response) {
                        showSuccessToastr(response.message);
                        searchAttendance();
                        unloadingButton(btn);
                    });
                }
            });
        }
        function updateNHrs(curr, W_days, P_HDays, index) {
            var workingHrDay = $("#WorkingHrDay").val();
            var NHrs = parseInt((W_days - curr.value - P_HDays) * parseFloat(workingHrDay));
            $(`#AttendanceData_${index}__NHrs`).val(NHrs);
        }
        $('#btn-excel').on('click', function (e) {
            e.preventDefault();
            exportTableToExcel("EmpMonthlyAttendanceTable", '@ViewData["Title"]');
            searchAttendance();
        });
        function uploadFile() {
            var frm = $("#emp-monthly-attendance-filter-frm");
            if (frm.valid()) {
                filePostAjax('/Transactions/ImportAttendance', frm[0], function (response) {
                    $("#import-file").val("");
                    if (!response.includes("not supported")) {
                        $("#EmpMonthlyAttendanceData").empty();
                        $("#excel-import-data").html(response);
                        var tableRowCnt = $("#ExecelData tbody tr").length;
                        if (tableRowCnt == 0)
                            $("#excel-import-data").empty();
                        $("#btn-excel").addClass("d-none");
                    }
                    else
                        showErrorToastr(response);
                });
            }
            else
                showErrorToastr("Please provide highlighted field");
            $("#import-file").val("");
        }
    </script>
}