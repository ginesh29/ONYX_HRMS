@model VariablePayDedComponentFilterModel
@{
    ViewData["Title"] = SharedResource["Variable Pay & Deduction Components"];
}
<div class="card">
    <div class="card-body">
        <form id="variable-pay-deduction-comp-filter-frm">
            <div class="row">
                <div class="col-md-2">
                    <div class="form-group">
                        <label asp-for="Branch"></label>
                        <select asp-for="Branch" class="form-control select-picker" asp-items="ViewBag.BranchItems">
                        </select>
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group">
                        <label asp-for="Department"></label>
                        <select asp-for="Department" class="form-control filter-select-picker" asp-items="ViewBag.DepartmentItems">
                        </select>
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group">
                        <label asp-for="PayType"></label>
                        <select asp-for="PayType" class="form-control select-picker" asp-items="ViewBag.PayTypeItems" onchange="bindComponentClass(this)">
                        </select>
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group">
                        <label asp-for="PayCode"></label>
                        <select asp-for="PayCode" class="form-control filter-select-picker">
                        </select>
                    </div>
                </div>
                <div class="col-md-1">
                    <div class="form-group">
                        <label asp-for="MonthYear"></label>
                        <input asp-for="MonthYear" value="@ViewBag.currentMonthYear" class="form-control month-year-input" type="text" data-toggle="datetimepicker">
                    </div>
                </div>
                <div class="col-md-2 d-flex align-items-center">
                    <div class="form-group mt-4">
                        <button type="button" class="btn btn-warning mt-2" onclick="searchComponents(this)" id="btn-search"><i class="fa fa-search"></i></button>
                        <button type="button" class="btn btn-outline-info mt-2 ml-1 d-none" id="btn-excel"><i class="fa fa-file-excel"></i></button>
                        <button class="btn btn-secondary mt-2 ml-1 d-none" type="button" id="btn-clear" onclick="clearSearch(this)">Clear</button>
                    </div>
                </div>
            </div>
            <h5 class="mt-2 mb-4 side-separator-container"><span class="side-separator">OR</span></h5>
            <div class="row">
                <div class="col-md-3">
                    <div class="custom-file">
                        <input type="file" id="import-file" name="file" onchange="uploadFile(event)" class="custom-file-input">
                        <label class="custom-file-label" id="image-file-label" for="import-file">Choose file</label>
                    </div>
                    <a href="/formats/Emp_Variable_Pay_Compoments_Import_Sample.xlsx?@DateTime.Now">Download Sample File</a>
                </div>
            </div>
        </form>
        <div id="excel-import-data"></div>
        <div id="EmpVariablePayDedComponents"></div>
    </div>
</div>
<style>
    .tooltip-inner {
        max-width: 300px;
    }
</style>
@section scripts {
    <script src="~/plugins/lodash/lodash.js"></script>
    <script>
        function bindComponentClass(e) {
            $("#PayCode").empty();
            getAjax(`/Transactions/FetchPayCodeItems?type=${e.value}`, function (response) {
                var html = '';
                $.each(response, function (i, item) {
                    html += `<option value='${item.value}'>${item.text}</option>`
                })
                $("#PayCode").html(html);
                $("#PayCode").attr("title", "-- All --");
                $("#PayCode").selectpicker('refresh');
            });
        }
        function searchComponents(btn) {
            var frm = $("#variable-pay-deduction-comp-filter-frm");
            if (frm.valid()) {
                loadingButton(btn);
                postAjax(`/Transactions/FetchEmpVariablePayDedComponents`, frm.serialize(), function (response) {
                    $("#import-file").val("");
                    $("#EmpVariablePayDedComponents").html(response);
                    $("#excel-import-data").empty();
                    $("#btn-clear").removeClass("d-none");
                    unloadingButton(btn);
                    $("#variable-component-frm").validate({
                        errorClass: "input-validation-error",
                        errorPlacement: function (error, element) { },
                        invalidHandler: function (event, validator) {
                            showErrorToastr("Please provide highlighted field");
                        }
                    });
                });
            }
            else
                showErrorToastr("Please provide highlighted field");
        }
        function clearSearch(btn) {
            var frm = $("#variable-pay-deduction-comp-filter-frm");
            frm.find("input").val("");
            frm.find(".select-picker").selectpicker('val', '');
            frm.find(".filter-select-picker").selectpicker('val', '');
            $("#MonthYear").val('@ViewBag.currentMonthYear');
            $("#EmpVariablePayDedComponentsTable").empty();
            $("#excel-import-data").empty();
            $("#btn-clear").addClass("d-none");
        }
        function updateComponants(btn) {
            var frm = $("#variable-component-frm");
            if (frm.valid()) {
                loadingButton(btn);
                var url = `/Transactions/SaveEmpVariablePayDedComponents`;
                var filterModel = {
                    Branch: $("#FilterModel_Branch").val(),
                    Department: $("#FilterModel_Department").val(),
                    PayType: $("#FilterModel_PayType").val(),
                    PayCode: $("#FilterModel_PayCode").val(),
                    MonthYear: $("#FilterModel_MonthYear").val(),
                    FromDt: $("#FilterModel_FromDt").val(),
                    ToDt: $("#FilterModel_ToDt").val(),
                };
                unloadingButton(btn);
                var frmData = getFrmData();
                postAjax(url, { filterModel: filterModel, variableComponentsData: frmData }, function (response) {
                    if (response.success) {
                        showSuccessToastr(response.message);
                        searchComponents();
                    }
                    else {
                        showErrorToastr(response.message);
                    }
                    unloadingButton(btn);
                });
            }
        }
        function getFrmData() {
            var frmData = [];
            var totalRows = $("[id$=__Cd]").length;
            for (var i = 0; i < totalRows; i++) {
                frmData.push({
                    SrNo: $(`#VariableComponentsData_${i}__SrNo`).val(),
                    Cd: $(`#VariableComponentsData_${i}__Cd`).val(),
                    Branch: $(`#VariableComponentsData_${i}__Branch`).val(),
                    Dept: $(`#VariableComponentsData_${i}__Dept`).val(),
                    Amt: $(`#VariableComponentsData_${i}__Amt`).val(),
                    Narr: $(`#VariableComponentsData_${i}__Narr`).val(),
                    Active: $(`#VariableComponentsData_${i}__Active`).is(":checked")
                });
            }
            var filtered = frmData.filter(m => m.Active);
            return filtered;
        }
        function uploadFile(event) {
            var ext = event.target.files[0].name.split('.').pop().toLowerCase();
            if (excelExtensions.includes(ext)) {
                var frm = $("#variable-pay-deduction-comp-filter-frm");
                if (frm.valid()) {
                    loadingPage();
                    filePostAjax('/Transactions/ImportEmpVariablePayDedComponent', frm[0], function (response) {
                        $("#import-file").val("");
                        if (!response.includes("not supported")) {
                            $("#EmpVariablePayDedComponents").empty();
                            $("#excel-import-data").html(response);
                            var tableRowCnt = $("#ExecelData tbody tr").length;
                            if (tableRowCnt == 0)
                                $("#excel-import-data").empty();
                        }
                        else
                            showErrorToastr(response);
                        unloadingPage();
                    });
                }
                else
                    showErrorToastr("Please provide highlighted field");
                $("#import-file").val("");
            }
            else
                showErrorToastr(`${ext.toUpperCase()} file type not allowed`);
        }
        function changeCheckbox(cur) {
            $(cur).closest("tr").find("input").addClass("disabled");
            $(cur).closest("tr").removeClass("table-primary");
            if ($(cur).is(":checked")) {
                $(cur).closest("tr").find("input").removeClass("disabled");
                $(cur).closest("tr").addClass("table-primary");
            }
            var totalCheckbox = $(".chk").length;
            var totalCheckedCheckbox = $(".chk:checked").length;
            if (totalCheckbox == totalCheckedCheckbox)
                $("#check-all").prop("checked", true);
            else
                $("#check-all").prop("checked", false);
        }
        function checkAll(cur) {
            var checked = $(cur).is(":checked");
            if (checked) {
                $("#EmpVariablePayDedComponents table tbody tr").addClass("table-primary");
                $("#EmpVariablePayDedComponents table tbody tr").find("input").removeClass("disabled");
                $(".chk").prop("checked", true);
            }
            else {
                $(".chk").prop("checked", false);
                $("#EmpVariablePayDedComponents table tbody tr").find("input").addClass("disabled");
                $("#EmpVariablePayDedComponents table tbody tr").removeClass("table-primary");
            }
        }
    </script>
}