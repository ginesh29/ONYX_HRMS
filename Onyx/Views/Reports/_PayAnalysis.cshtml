@model IEnumerable<GetRepo_FixedEarnDed_Result>
@{
    var loggedInUser = _authService.GetLoggedInUser();
    var DecimalFormat = ExtensionMethod.GetDecimalFormat(loggedInUser.AmtDecs);
    var groupedData = Model.GroupBy(m => new { m.Code, m.Name });
    var componentTypes = new List<SelectListItem>()
    {
        new() {Text="Fixed", Value="F"},
        new() { Text="Variable", Value="V"},
        new() { Text="Per-day", Value="D"},
        new() { Text="Hourly", Value="H"},
        new() { Text="Pro-rata", Value="P"}
    };
}
<div>
    @foreach (var grp in groupedData)
    {
        var totalAmt = grp.Where(m => m.ExRate > 0).Sum(m => m.Amt);
        <table class="table table-sm">
            <thead class="thead-dark">
                <tr>
                    <th colspan="6">@grp.Key.Name (@grp.Key.Code.Trim())</th>
                    <th width="200">Net Pay: @totalAmt.ToString(DecimalFormat)</th>
                </tr>
            </thead>
            <thead class="thead-light">
                <tr>
                    <th>Earnig Type</th>
                    <th>Pay Description</th>
                    <th>Transaction Type</th>
                    <th>Currency</th>
                    <th>Amount</th>
                    <th>Ex. Rate</th>
                    <th>Amount</th>
                </tr>
            </thead>
            @foreach (var item in grp)
            {
                var type = componentTypes.FirstOrDefault(m => m.Value == item.TransactionType)?.Text;
                <tr>
                    <td>@item.TypeDes</td>
                    <td>@item.PayType</td>
                    <td>@type</td>
                    <td>@item.Curr</td>
                    <td>@item.Amt.ToString(DecimalFormat)</td>
                    <td>@(item.ExRate > 0 ? item.ExRate.ToString(DecimalFormat) : "")</td>
                    <td>@(item.ExRate > 0 ? item.Amt.ToString(DecimalFormat) : "")</td>
                </tr>
            }
        </table>
    }
</div>