@model IncentiveFilterModel
@{
    ViewData["Title"] = SharedResource["Employee Incentives"];
}
<div class="card">
    <div class="card-body">
        <form id="emp-incentive-filter-frm" class="exclude-permission">
            <div class="row">
                <div class="col-md-3">
                    <div class="form-group">
                        <label asp-for="Branch"></label>
                        <select asp-for="Branch" class="form-control select-picker" asp-items="ViewBag.BranchItems">
                        </select>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        <label asp-for="Designation"></label>
                        <select asp-for="Designation" class="form-control filter-select-picker" asp-items="ViewBag.DesignationItems">
                        </select>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        <label asp-for="EmpCd"></label>
                        <select asp-for="EmpCd" class="form-control select2" data-placeholder="@CommonSetting.DEFAULTSELECT">
                            <option value=""></option>
                        </select>
                        <span asp-validation-for="EmpCd" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group">
                        <label asp-for="EmpType"></label>
                        <select asp-for="EmpType" class="form-control filter-select-picker" asp-items="ViewBag.EmpTypeItems">
                        </select>
                    </div>
                </div>
                <div class="col-md-1">
                    <div class="form-group">
                        <label asp-for="MonthYear"></label>
                        <input asp-for="MonthYear" value="@ViewBag.currentMonthYear" class="form-control month-year-input" type="text" data-toggle="datetimepicker">
                    </div>
                </div>
                <div class="col-md-2 d-flex align-items-center">
                    <div class="form-group">
                        <button type="button" class="btn btn-warning mt-2" onclick="searchIncentive(this)" id="btn-search"><i class="fa fa-search"></i></button>
                        <button type="button" class="btn btn-outline-info mt-2 ml-1 d-none" id="btn-excel" data-table-id="EmpIncentiveTable"><i class="fa fa-file-excel"></i></button>
                        <button class="btn btn-secondary mt-2 ml-1 d-none" type="button" id="btn-clear" onclick="clearSearch(this)">Clear</button>
                    </div>
                </div>
            </div>
            <h5 class="mt-2 mb-4 side-separator-container"><span class="side-separator">OR</span></h5>
            <div class="row">
                <div class="col-md-4">
                    <div class="custom-file">
                        <input type="file" id="import-file" name="file" onchange="uploadFile(event)" class="custom-file-input">
                        <label class="custom-file-label" id="image-file-label" for="import-file">Choose file</label>
                    </div>
                    <a href="/formats/Emp_Incentive_Import_Sample.xlsx?@DateTime.Now">Download Sample File</a>
                </div>
            </div>
        </form>
        <div id="excel-import-data"></div>
        <div id="EmpIncentiveData"></div>
    </div>
</div>
<style>
    .tooltip-inner {
        max-width: 300px;
    }
</style>
@section scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.17.3/xlsx.full.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/FileSaver.js/2.0.5/FileSaver.min.js"></script>
    <script>
        function searchIncentive(btn) {
            var frm = $("#emp-incentive-filter-frm");
            if (frm.valid()) {
                loadingButton(btn);
                postAjax(`/Incentives/FetchEmpIncentives`, frm.serialize(), function (response) {
                    $("#btn-excel").addClass("d-none");
                    $("#import-file").val("");
                    $("#EmpIncentiveData").html(response);
                    $("#excel-import-data").empty();
                    $("#btn-clear").removeClass("d-none");
                    $("#btn-excel").addClass("d-none");
                    if (!$("#EmpIncentiveTable tfoot").length)
                        $("#btn-excel").removeClass("d-none");
                    unloadingButton(btn);
                });
            }
            else
                showErrorToastr("Please provide highlighted field");
        }
        function clearSearch(btn) {
            var frm = $("#emp-ncentive-filter-frm");
            frm.find("input").val("");
            frm.find(".select-picker").selectpicker('val', '');
            frm.find(".filter-select-picker").selectpicker('val', '');
            $("#MonthYear").val('@ViewBag.currentMonthYear');
            $("#EmpIncentiveData").empty();
            $("#excel-import-data").empty();
            $("#btn-clear").addClass("d-none");
            $("#btn-excel").addClass("d-none");
        }
        function updateIncentive(btn) {
            var frm = $("#incentive-frm");
            if (frm.valid()) {
                loadingButton(btn);
                var filterModel = $('#incentive-filter-frm').find('input, select, textarea').serialize();
                var frmData = $('#incentive-frm').find('input[type="checkbox"]:checked')
                    .closest('tr')
                    .find('input, select, textarea').serialize();
                var url = `/Incentives/SaveEmpIncentive`;
                if (frmData.length)
                    postAjax(url, `${filterModel}&${frmData}`, function (response) {
                        if (response.success) {
                            showSuccessToastr(response.message);
                            searchIncentive();
                        }
                        else {
                            showErrorToastr(response.message);
                        }
                    });
                else
                    showErrorToastr("Please select atleast one");
                unloadingButton(btn);
            }
        }
        $('#btn-excel').on('click', function (e) {
            e.preventDefault();
            searchIncentive();
        });
        function uploadFile(event) {
            var ext = event.target.files[0].name.split('.').pop().toLowerCase();
            if (excelExtensions.includes(ext)) {
                var frm = $("#emp-incentive-filter-frm");
                if (frm.valid()) {
                    loadingPage();
                    filePostAjax('/Incentives/ImportIncentive', frm[0], function (response) {
                        $("#import-file").val("");
                        if (!response.includes("not supported")) {
                            $("#EmpIncentiveData").empty();
                            $("#excel-import-data").html(response);
                            var tableRowCnt = $("#ExecelData tbody tr").length;
                            if (tableRowCnt == 0)
                                $("#excel-import-data").empty();
                            $("#btn-excel").addClass("d-none");
                        }
                        else
                            showErrorToastr(response);
                        unloadingPage();
                    });
                }
                else
                    showErrorToastr("Please provide highlighted field");
                $("#import-file").val("");
            }
            else
                showErrorToastr(`${ext.toUpperCase()} file type not allowed`);
        }
        function getFrmData() {
            var frmData = [];
            var totalRows = $("[id$=__Cd]").length;
            for (var i = 0; i < totalRows; i++) {
                frmData.push({
                    SrNo: $(`#IncentiveData_${i}__SrNo`).val(),
                    Cd: $(`#IncentiveData_${i}__Cd`).val(),
                    SalesAmt: $(`#IncentiveData_${i}__SalesAmt`).val(),
                    Amt: $(`#IncentiveData_${i}__Amt`).val(),
                    Amt1: $(`#IncentiveData_${i}__Amt1`).val(),
                    Narr: $(`#IncentiveData_${i}__Narr`).val(),
                    Active: $(`#IncentiveData_${i}__Active`).is(":checked")
                });
            }
            var filtered = frmData.filter(m => m.Active);
            return filtered;
        }
        bindEmployeeDropdown();

        function changeCheckbox(cur) {
            $(cur).closest("tr").find("input").addClass("disabled");
            $(cur).closest("tr").removeClass("table-primary");
            if ($(cur).is(":checked")) {
                $(cur).closest("tr").find("input").removeClass("disabled");
                $(cur).closest("tr").addClass("table-primary");
            }
            var totalCheckbox = $(".chk").length;
            var totalCheckedCheckbox = $(".chk:checked").length;
            if (totalCheckbox == totalCheckedCheckbox)
                $("#check-all").prop("checked", true);
            else
                $("#check-all").prop("checked", false);
        }
        function checkAll(cur) {
            var checked = $(cur).is(":checked");
            if (checked) {
                $("#EmpIncentiveData table tbody tr").addClass("table-primary");
                $("#EmpIncentiveData table tbody tr").find("input").removeClass("disabled");
                $(".chk").prop("checked", true);
            }
            else {
                $(".chk").prop("checked", false);
                $("#EmpIncentiveData table tbody tr").find("input").addClass("disabled");
                $("#EmpIncentiveData table tbody tr").removeClass("table-primary");
            }
        }
    </script>
}