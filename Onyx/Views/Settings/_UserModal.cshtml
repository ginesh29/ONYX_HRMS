@using System.Text.Json
@model UserModel
@{
    int[] menuItems = ViewBag.SelectedMenuItems;
    string menuArray = JsonSerializer.Serialize(menuItems);
    string[] actionTypes = { "Add", "Edit", "Delete", "View", "Print" };
    List<UserBranch_GetRow_Result> UserBranchItems = ViewBag.UserBranchItems;
    var companyCd = User.Claims.FirstOrDefault(m => m.Type == "CompanyCd")?.Value;
}
<div class="modal-dialog modal-lg">
    <!-- Modal content-->
    <div class="modal-content">
        <div class="modal-header">
            <h4 class="modal-title">@(!string.IsNullOrEmpty(Model.Code) ? "Edit" : "Add") User</h4>
            <button type="button" class="close" data-dismiss="modal">&times;</button>
        </div>
        <div class="modal-body">
            <form id="user-frm">
                <input type="hidden" asp-for="Cd" />
                <input type="hidden" asp-for="MenuIds" />
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group @(!string.IsNullOrEmpty(Model.Code) ? "disabled-container" : "")">
                            <label asp-for="Code"></label>
                            <input asp-for="Code" class="form-control @(!string.IsNullOrEmpty(Model.Code) ? "disabled" : "")" />
                            <span asp-validation-for="Code" class="text-danger"></span>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label asp-for="Username"></label>
                            <input asp-for="Username" class="form-control" />
                            <span asp-validation-for="Username" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label asp-for="LoginId"></label>
                            <input asp-for="LoginId" class="form-control" />
                            <span asp-validation-for="LoginId" class="text-danger"></span>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label asp-for="UPwd"></label>
                            <input type="password" asp-for="UPwd" class="form-control" value="@Model.UPwd" />
                            <span asp-validation-for="UPwd" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label asp-for="CUPwd"></label>
                            <input type="password" asp-for="CUPwd" class="form-control" value="@Model.UPwd" />
                            <span asp-validation-for="CUPwd" class="text-danger"></span>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label asp-for="Abbr"></label>
                            <input asp-for="Abbr" class="form-control" />
                            <span asp-validation-for="Abbr" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label asp-for="UserBranchCd"></label>
                            <select asp-for="UserBranchCd" class="select-picker" multiple data-selected-text-format="count > 1" data-actions-box="true" data-width="100%">
                                @foreach (var item in UserBranchItems)
                                {
                                    var img = !string.IsNullOrEmpty(item.Image) ? $"<img src='/uploads/{companyCd}/branch/{item.Image}' width='20' height='20' class='ml-2 rounded border rounded-circle'>" : null;
                                    <option data-content="@($"{item.Branch}({item.Div.Trim()}) {@img}")" value="@item.Div" selected="@(!string.IsNullOrEmpty(item.UserDes))"></option>
                                }
                            </select>
                            <span asp-validation-for="UserBranchCd" class="text-danger"></span>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label asp-for="ExpiryDt"></label>
                            <input asp-for="ExpiryDt" class="form-control date-input" type="text">
                            <span asp-validation-for="ExpiryDt" class="text-danger"></span>
                        </div>
                    </div>
                </div>
                @if (Model.Cd != "001")
                {
                    <label>Menu & Permission</label>
                    <div id="tree-view">
                        <ul>
                            @foreach (var item in Model.Menus)
                            {
                                <li id="@item.MenuId">
                                    <span class="jstree-checkbox">
                                        @item.Caption
                                    </span>
                                    @if (item.Children != null && item.Children.Any())
                                    {
                                        @await Component.InvokeAsync("UserPermissionMenuChild", new { items = item.Children })
                                    }
                                </li>
                            }
                        </ul>
                    </div>
                }
            </form>
        </div>
        <div class="modal-footer">
            <button type="button" class="btn btn-info" onclick="saveUser(this)">Submit</button>
            <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
        </div>
    </div>
</div>
<script>
    setTimeout(function () {
        $('#tree-view').jstree({
            "checkbox": {
                "keep_selected_style": false,
                "whole_node": false,
                "tie_selection": false
            },
            "plugins": ["checkbox"]
        }).on("check_node.jstree uncheck_node.jstree", function (e, data) {
            var id = data.node.id;
            var treeInstance = $('#tree-view').jstree(true);
            var childNodes = treeInstance.get_node(id).children;
            var allCheckedNodes = [id].concat(childNodes);

            allCheckedNodes.forEach(function (childId) {
                var subChildNodes = treeInstance.get_node(childId).children;
                allCheckedNodes = allCheckedNodes.concat(subChildNodes);
            });
            $.each(allCheckedNodes, function (i, item) {
                if (e.type == "check_node") {
                    $(`#permission_checkbox_Add_${item}`).prop("checked", true);
                    $(`#permission_checkbox_Edit_${item}`).prop("checked", true);
                    $(`#permission_checkbox_Delete_${item}`).prop("checked", true);
                    $(`#permission_checkbox_View_${item}`).prop("checked", true);
                    $(`#permission_checkbox_Print_${item}`).prop("checked", true);
                }
                else {
                    $(`#permission_checkbox_Add_${item}`).prop("checked", false);
                    $(`#permission_checkbox_Edit_${item}`).prop("checked", false);
                    $(`#permission_checkbox_Delete_${item}`).prop("checked", false);
                    $(`#permission_checkbox_View_${item}`).prop("checked", false);
                    $(`#permission_checkbox_Print_${item}`).prop("checked", false);
                }
                expandAllParents($('#tree-view'), item);
            });


            var checkedNodes = treeInstance.get_checked();
            $("#MenuIds").val(checkedNodes.toString());
        }).on('ready.jstree', function () {
            initJsTree = false;
        });
        var selectedNodes = JSON.parse('@menuArray');
        $.each(selectedNodes, function (i, item) {
            $('#tree-view').jstree('check_node', '#' + item);
            expandAllParents($('#tree-view'), item);
        });
    }, 0)
</script>